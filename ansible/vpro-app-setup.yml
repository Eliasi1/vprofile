
- name: Setup Tomcat8 & Deploy Artifact
  hosts: appsrvgrp
  become: yes
  vars:
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}" #will be create every time we run the playbook, and used in backup files
  tasks:
    - name: Debug Variable
      debug:
        msg: "Build: '{{build}}', time: '{{time}}', vprofile_version: '{{vprofile_version}}'"

    - name: Download latest VProfile.war from nexus
      get_url:
        url: "http://{{USER}}:{{PASS}}@{{nexusip}}:8081/repository/{{reponame}}/{{groupid}}/{{artifactid}}/{{build}}-{{time}}/{{vprofile_version}}" # artifact in vprofile_release nexus repository for example: http://54.242.78.2:8081/repository/vprofile-release/QA/vproapp/32-2023-06-25%2012%3A24/vproapp-32-2023-06-25%2012%3A24.war 
        dest: "/tmp/vproapp-{{vprofile_version}}"
      register: wardeploy
      tags:
       - deploy

    - stat: # check if this path exists, and store the result in variable for later use
        path: /usr/local/tomcat8/webapps/ROOT 
      register: artifact_stat
      tags:
       - deploy

    - name: Stop tomcat svc
      service:
        name: tomcat
        state: stopped
      tags:
       - deploy

    - name: Try Backup and Deploy #we will try because the backup and deploy can fail for many reasons, it is important to keep a back up plan for failure like rollback
      block:
      - name: Archive ROOT dir with timestamp
        archive:
          path: /usr/local/tomcat8/webapps/ROOT
          dest: "/opt/ROOT_{{timestamp}}.tgz"
        when: artifact_stat.stat.exists
        register: archive_info
        tags:
         - deploy

      - name: copy ROOT dir with old_ROOT name
        shell: cp -r ROOT old_ROOT
        args:
          chdir: /usr/local/tomcat8/webapps/

      - name: Delete current artifact
        file:
          path: "{{item}}"
          state: absent
        when: archive_info.changed
        loop:
         - /usr/local/tomcat8/webapps/ROOT
         - /usr/local/tomcat8/webapps/ROOT.war
        tags:
         - deploy

      - name: Try deploy artifact else restore from previos old_ROOT
        block:
         - name: Deploy vprofile artifact
           copy:
             src: "/tmp/vproapp-{{vprofile_version}}"
             dest: /usr/local/tomcat8/webapps/ROOT.war
             remote_src: yes
           register: deploy_info
           tags:
            - deploy
        rescue:
          - shell: cp -r old_ROOT ROOT
            args:
              chdir: /usr/local/tomcat8/webapps/

      rescue:
       - name: Start tomcat svc
         service:
          name: tomcat
          state: started

    - name: Start tomcat svc
      service:
        name: tomcat
        state: started
      when: deploy_info.changed
      tags:
       - deploy

    - name: Wait until ROOT.war is extracted to ROOT directory
      wait_for: # wait until ROOT directory is available, because extraction takes time. 
        path: /usr/local/tomcat8/webapps/ROOT
      tags:
       - deploy

#    - name: Deploy web configuration file #for deploying application.properties file from the playbook by using playbook 
#      template:
#        src: templates/application.j2
#        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
#        force: yes
#      notify:
#       - Restart Tomcat
#      tags:
#       - deploy

  handlers:
   - name: Restart Tomcat
     service:
      name: tomcat
      state: restarted
